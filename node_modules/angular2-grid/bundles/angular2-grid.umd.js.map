{"version":3,"file":"angular2-grid.umd.js.map","sources":[null,"ng://angular2-grid/helpers/NgGridHelpers.ts","ng://angular2-grid/components/NgGridPlaceholder.ts","ng://angular2-grid/directives/NgGrid.ts","ng://angular2-grid/directives/NgGridItem.ts","ng://angular2-grid/modules/NgGrid.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgGridItem } from \"../directives/NgGridItem\";\n\nexport function generateUuid(): string {\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t\tlet r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n\t\treturn v.toString(16);\n\t});\n}\n\nexport function sortItemsByPositionHorizontal(a: NgGridItem, b: NgGridItem): number {\n\tif (a.col === b.col) { return a.row - b.row; }\n\treturn a.col - b.col;\n}\n\nexport function sortItemsByPositionVertical(a: NgGridItem, b: NgGridItem): number {\n\tif (a.row === b.row) { return a.col - b.col; }\n\treturn a.row - b.row;\n}\n","import { NgGrid } from '../directives/NgGrid';\nimport { NgGridItemPosition, NgGridItemSize } from '../interfaces/INgGrid';\nimport { Component, Directive, ElementRef, Renderer, EventEmitter, Host, ViewEncapsulation, Type, ComponentRef, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, DoCheck, ViewContainerRef, Output } from '@angular/core';\n\n@Component({\n    selector: 'ng-grid-placeholder',\n    template: ''\n})\nexport class NgGridPlaceholder implements OnInit {\n    private _size: NgGridItemSize;\n    private _position: NgGridItemPosition;\n    private _ngGrid: NgGrid;\n    private _cascadeMode: string;\n\n    constructor(private _ngEl: ElementRef, private _renderer: Renderer) { }\n\n    public registerGrid(ngGrid: NgGrid) {\n        this._ngGrid = ngGrid;\n    }\n\n    public ngOnInit(): void {\n        this._renderer.setElementClass(this._ngEl.nativeElement, 'grid-placeholder', true);\n        if (this._ngGrid.autoStyle) this._renderer.setElementStyle(this._ngEl.nativeElement, 'position', 'absolute');\n    }\n\n    public setSize(newSize: NgGridItemSize): void {\n        this._size = newSize;\n        this._recalculateDimensions();\n    }\n\n    public setGridPosition(newPosition: NgGridItemPosition): void {\n        this._position = newPosition;\n        this._recalculatePosition();\n    }\n\n    public setCascadeMode(cascade: string): void {\n        this._cascadeMode = cascade;\n        switch (cascade) {\n            case 'up':\n            case 'left':\n            default:\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'left', '0px');\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'top', '0px');\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'right', null);\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'bottom', null);\n                break;\n            case 'right':\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'right', '0px');\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'top', '0px');\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'left', null);\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'bottom', null);\n                break;\n            case 'down':\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'left', '0px');\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'bottom', '0px');\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'right', null);\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'top', null);\n                break;\n        }\n    }\n\n    // Private methods\n    private _setDimensions(w: number, h: number): void {\n        this._renderer.setElementStyle(this._ngEl.nativeElement, 'width', w + 'px');\n        this._renderer.setElementStyle(this._ngEl.nativeElement, 'height', h + 'px');\n    }\n\n    private _setPosition(x: number, y: number): void {\n        switch (this._cascadeMode) {\n            case 'up':\n            case 'left':\n            default:\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'translate(' + x + 'px, ' + y + 'px)');\n                break;\n            case 'right':\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'translate(' + -x + 'px, ' + y + 'px)');\n                break;\n            case 'down':\n                this._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'translate(' + x + 'px, ' + -y + 'px)');\n                break;\n        }\n    }\n\n    private _recalculatePosition(): void {\n        const x: number = (this._ngGrid.colWidth + this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._position.col - 1) + this._ngGrid.marginLeft + this._ngGrid.screenMargin;\n        const y: number = (this._ngGrid.rowHeight + this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._position.row - 1) + this._ngGrid.marginTop;\n        this._setPosition(x, y);\n    }\n\n    private _recalculateDimensions(): void {\n        const w: number = (this._ngGrid.colWidth * this._size.x) + ((this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._size.x - 1));\n        const h: number = (this._ngGrid.rowHeight * this._size.y) + ((this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._size.y - 1));\n        this._setDimensions(w, h);\n    }\n}\n","import { Component, Directive, ElementRef, Renderer, EventEmitter, ComponentFactoryResolver, Host, ViewEncapsulation, Type, ComponentRef, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, DoCheck, ViewContainerRef, Output } from '@angular/core';\nimport { NgGridConfig, NgGridItemEvent, NgGridItemPosition, NgGridItemSize, NgGridRawPosition, NgGridItemDimensions, NgConfigFixDirection } from '../interfaces/INgGrid';\nimport { NgGridItem } from './NgGridItem';\nimport * as NgGridHelper from '../helpers/NgGridHelpers';\nimport { NgGridPlaceholder } from '../components/NgGridPlaceholder';\nimport { Subscription, Observable, fromEvent } from 'rxjs';\n\n@Directive({\n    selector: '[ngGrid]',\n    inputs: ['config: ngGrid'],\n    host: {\n        '(window:resize)': 'resizeEventHandler($event)',\n    }\n})\nexport class NgGrid implements OnInit, DoCheck, OnDestroy {\n    public static CONST_DEFAULT_RESIZE_DIRECTIONS: string[] = [\n        'bottomright',\n        'bottomleft',\n        'topright',\n        'topleft',\n        'right',\n        'left',\n        'bottom',\n        'top',\n    ];\n\n    // Event Emitters\n    @Output() public onDragStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onDrag: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onDragStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onResizeStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onResize: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onResizeStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\n    @Output() public onItemChange: EventEmitter<Array<NgGridItemEvent>> = new EventEmitter<Array<NgGridItemEvent>>();\n\n    // Public variables\n    public colWidth: number = 250;\n    public rowHeight: number = 250;\n    public minCols: number = 1;\n    public minRows: number = 1;\n    public marginTop: number = 10;\n    public marginRight: number = 10;\n    public marginBottom: number = 10;\n    public marginLeft: number = 10;\n    public screenMargin: number = 0;\n    public isDragging: boolean = false;\n    public isResizing: boolean = false;\n    public autoStyle: boolean = true;\n    public resizeEnable: boolean = true;\n    public dragEnable: boolean = true;\n    public cascade: string = 'up';\n    public minWidth: number = 100;\n    public minHeight: number = 100;\n    public resizeDirections: string[] = NgGrid.CONST_DEFAULT_RESIZE_DIRECTIONS;\n\n    // Private variables\n    private _items: Map<string, NgGridItem> = new Map<string, NgGridItem>();\n    private _draggingItem: NgGridItem = null;\n    private _resizingItem: NgGridItem = null;\n    private _resizeDirection: string = null;\n    private _itemsInGrid: Set<string> = new Set<string>();\n    private _containerWidth: number;\n    private _containerHeight: number;\n    private _maxCols: number = 0;\n    private _maxRows: number = 0;\n    private _visibleCols: number = 0;\n    private _visibleRows: number = 0;\n    private _setWidth: number = 250;\n    private _setHeight: number = 250;\n    private _posOffset: NgGridRawPosition = null;\n    private _adding: boolean = false;\n    private _placeholderRef: ComponentRef<NgGridPlaceholder> = null;\n    private _fixToGrid: boolean = false;\n    private _autoResize: boolean = false;\n    private _differ: KeyValueDiffer<string, any>;\n    private _destroyed: boolean = false;\n    private _maintainRatio: boolean = false;\n    private _aspectRatio: number;\n    private _preferNew: boolean = false;\n    private _zoomOnDrag: boolean = false;\n    private _limitToScreen: boolean = false;\n    private _centerToScreen: boolean = false;\n    private _curMaxRow: number = 0;\n    private _curMaxCol: number = 0;\n    private _dragReady: boolean = false;\n    private _resizeReady: boolean = false;\n    private _elementBasedDynamicRowHeight: boolean = false;\n    private _itemFixDirection: NgConfigFixDirection = 'cascade';\n    private _collisionFixDirection: NgConfigFixDirection = 'cascade';\n    private _allowOverlap: boolean = false;\n    private _cascadePromise: Promise<void>;\n    private _lastZValue: number = 1;\n\n    // Events\n    private _documentMousemove$: Observable<MouseEvent>;\n    private _documentMouseup$: Observable<MouseEvent>;\n    private _mousedown$: Observable<MouseEvent>;\n    private _mousemove$: Observable<MouseEvent>;\n    private _mouseup$: Observable<MouseEvent>;\n    private _touchstart$: Observable<TouchEvent>;\n    private _touchmove$: Observable<TouchEvent>;\n    private _touchend$: Observable<TouchEvent>;\n    private _subscriptions: Subscription[] = [];\n\n    private _enabledListener: boolean = false;\n\n    // Default config\n    private static CONST_DEFAULT_CONFIG: NgGridConfig = {\n        margins: [10],\n        draggable: true,\n        resizable: true,\n        max_cols: 0,\n        max_rows: 0,\n        visible_cols: 0,\n        visible_rows: 0,\n        col_width: 250,\n        row_height: 250,\n        cascade: 'up',\n        min_width: 100,\n        min_height: 100,\n        fix_to_grid: false,\n        auto_style: true,\n        auto_resize: false,\n        maintain_ratio: false,\n        prefer_new: false,\n        zoom_on_drag: false,\n        limit_to_screen: false,\n        center_to_screen: false,\n        resize_directions: NgGrid.CONST_DEFAULT_RESIZE_DIRECTIONS,\n        element_based_row_height: false,\n        fix_item_position_direction: 'cascade',\n        fix_collision_position_direction: 'cascade',\n        allow_overlap: false,\n    };\n    private _config = NgGrid.CONST_DEFAULT_CONFIG;\n\n    // [ng-grid] attribute handler\n    set config(v: NgGridConfig) {\n        if (v == null || typeof v !== 'object') {\n            return;\n        }\n\n        this.setConfig(v);\n\n        if (this._differ == null && v != null) {\n            this._differ = this._differs.find(this._config).create();\n        }\n\n        this._differ.diff(this._config);\n    }\n\n    // Constructor\n    constructor(\n        private _differs: KeyValueDiffers,\n        private _ngEl: ElementRef,\n        private _renderer: Renderer,\n        private componentFactoryResolver: ComponentFactoryResolver,\n    ) {\n        this._defineListeners();\n    }\n\n    // Public methods\n    public ngOnInit(): void {\n        this._renderer.setElementClass(this._ngEl.nativeElement, 'grid', true);\n        if (this.autoStyle) this._renderer.setElementStyle(this._ngEl.nativeElement, 'position', 'relative');\n        this.setConfig(this._config);\n    }\n\n    public ngOnDestroy(): void {\n        this._destroyed = true;\n        this._disableListeners();\n    }\n\n    public generateItemUid(): string {\n        const uid: string = NgGridHelper.generateUuid();\n\n        if (this._items.has(uid)) {\n            return this.generateItemUid();\n        }\n\n        return uid;\n    }\n\n    public setConfig(config: NgGridConfig): void {\n        this._config = config;\n\n        var maxColRowChanged = false;\n        for (var x in config) {\n            var val = config[x];\n            var intVal = !val ? 0 : parseInt(val);\n\n            switch (x) {\n                case 'margins':\n                    this.setMargins(val);\n                    break;\n                case 'col_width':\n                    this.colWidth = Math.max(intVal, 1);\n                    break;\n                case 'row_height':\n                    this.rowHeight = Math.max(intVal, 1);\n                    break;\n                case 'auto_style':\n                    this.autoStyle = val ? true : false;\n                    break;\n                case 'auto_resize':\n                    this._autoResize = val ? true : false;\n                    break;\n                case 'draggable':\n                    this.dragEnable = val ? true : false;\n                    break;\n                case 'resizable':\n                    this.resizeEnable = val ? true : false;\n                    break;\n                case 'max_rows':\n                    maxColRowChanged = maxColRowChanged || this._maxRows != intVal;\n                    this._maxRows = intVal < 0 ? 0 : intVal;\n                    break;\n                case 'max_cols':\n                    maxColRowChanged = maxColRowChanged || this._maxCols != intVal;\n                    this._maxCols = intVal < 0 ? 0 : intVal;\n                    break;\n                case 'visible_rows':\n                    this._visibleRows = Math.max(intVal, 0);\n                    break;\n                case 'visible_cols':\n                    this._visibleCols = Math.max(intVal, 0);\n                    break;\n                case 'min_rows':\n                    this.minRows = Math.max(intVal, 1);\n                    break;\n                case 'min_cols':\n                    this.minCols = Math.max(intVal, 1);\n                    break;\n                case 'min_height':\n                    this.minHeight = Math.max(intVal, 1);\n                    break;\n                case 'min_width':\n                    this.minWidth = Math.max(intVal, 1);\n                    break;\n                case 'zoom_on_drag':\n                    this._zoomOnDrag = val ? true : false;\n                    break;\n                case 'cascade':\n                    if (this.cascade != val) {\n                        this.cascade = val;\n                        this._cascadeGrid();\n                    }\n                    break;\n                case 'fix_to_grid':\n                    this._fixToGrid = val ? true : false;\n                    break;\n                case 'maintain_ratio':\n                    this._maintainRatio = val ? true : false;\n                    break;\n                case 'prefer_new':\n                    this._preferNew = val ? true : false;\n                    break;\n                case 'limit_to_screen':\n                    this._limitToScreen = !this._autoResize && !!val;\n                    break;\n                case 'center_to_screen':\n                    this._centerToScreen = val ? true : false;\n                    break;\n                case 'resize_directions':\n                    this.resizeDirections = val || ['bottomright', 'bottomleft', 'topright', 'topleft', 'right', 'left', 'bottom', 'top'];\n                    break;\n                case 'element_based_row_height':\n                    this._elementBasedDynamicRowHeight = !!val;\n                    break;\n                case 'fix_item_position_direction':\n                    this._itemFixDirection = val;\n                    break;\n                case 'fix_collision_position_direction':\n                    this._collisionFixDirection = val;\n                    break;\n                case 'allow_overlap':\n                    this._allowOverlap = !!val;\n                    break;\n            }\n        }\n\n        if (this._allowOverlap && this.cascade !== 'off' && this.cascade !== '') {\n            console.warn('Unable to overlap items when a cascade direction is set.');\n            this._allowOverlap = false;\n        }\n\n        if (this.dragEnable || this.resizeEnable) {\n            this._enableListeners();\n        } else {\n            this._disableListeners();\n        }\n\n        if (this._itemFixDirection === 'cascade') {\n            this._itemFixDirection = this._getFixDirectionFromCascade();\n        }\n\n        if (this._collisionFixDirection === 'cascade') {\n            this._collisionFixDirection = this._getFixDirectionFromCascade();\n        }\n\n        if (this._limitToScreen) {\n            const newMaxCols = this._getContainerColumns();\n\n            if (this._maxCols != newMaxCols) {\n                this._maxCols = newMaxCols;\n                maxColRowChanged = true;\n            }\n        }\n\n        if (this._limitToScreen && this._centerToScreen) {\n            this.screenMargin = this._getScreenMargin();\n        } else {\n            this.screenMargin = 0;\n        }\n\n        if (this._maintainRatio) {\n            if (this.colWidth && this.rowHeight) {\n                this._aspectRatio = this.colWidth / this.rowHeight;\n            } else {\n                this._maintainRatio = false;\n            }\n        }\n\n        if (maxColRowChanged) {\n            if (this._maxCols > 0 && this._maxRows > 0) {    //    Can't have both, prioritise on cascade\n                switch (this.cascade) {\n                    case 'left':\n                    case 'right':\n                        this._maxCols = 0;\n                        break;\n                    case 'up':\n                    case 'down':\n                    default:\n                        this._maxRows = 0;\n                        break;\n                }\n            }\n\n            this._updatePositionsAfterMaxChange();\n        }\n\n        this._calculateColWidth();\n        this._calculateRowHeight();\n\n        var maxWidth = this._maxCols * this.colWidth;\n        var maxHeight = this._maxRows * this.rowHeight;\n\n        if (maxWidth > 0 && this.minWidth > maxWidth) this.minWidth = 0.75 * this.colWidth;\n        if (maxHeight > 0 && this.minHeight > maxHeight) this.minHeight = 0.75 * this.rowHeight;\n\n        if (this.minWidth > this.colWidth) this.minCols = Math.max(this.minCols, Math.ceil(this.minWidth / this.colWidth));\n        if (this.minHeight > this.rowHeight) this.minRows = Math.max(this.minRows, Math.ceil(this.minHeight / this.rowHeight));\n\n        if (this._maxCols > 0 && this.minCols > this._maxCols) this.minCols = 1;\n        if (this._maxRows > 0 && this.minRows > this._maxRows) this.minRows = 1;\n\n        this._updateRatio();\n\n        this._items.forEach((item: NgGridItem) => {\n            this._removeFromGrid(item);\n            item.setCascadeMode(this.cascade);\n        });\n\n        this._items.forEach((item: NgGridItem) => {\n            item.recalculateSelf();\n            this._addToGrid(item);\n        });\n\n        this._cascadeGrid();\n        this._updateSize();\n    }\n\n    public getItemPosition(itemId: string): NgGridItemPosition {\n        return this._items.has(itemId) ? this._items.get(itemId).getGridPosition() : null;\n    }\n\n    public getItemSize(itemId: string): NgGridItemSize {\n        return this._items.has(itemId) ? this._items.get(itemId).getSize() : null;\n    }\n\n    public ngDoCheck(): boolean {\n        if (this._differ != null) {\n            var changes = this._differ.diff(this._config);\n\n            if (changes != null) {\n                this._applyChanges(changes);\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public setMargins(margins: Array<string>): void {\n        this.marginTop = Math.max(parseInt(margins[0]), 0);\n        this.marginRight = margins.length >= 2 ? Math.max(parseInt(margins[1]), 0) : this.marginTop;\n        this.marginBottom = margins.length >= 3 ? Math.max(parseInt(margins[2]), 0) : this.marginTop;\n        this.marginLeft = margins.length >= 4 ? Math.max(parseInt(margins[3]), 0) : this.marginRight;\n    }\n\n    public enableDrag(): void {\n        this.dragEnable = true;\n    }\n\n    public disableDrag(): void {\n        this.dragEnable = false;\n    }\n\n    public enableResize(): void {\n        this.resizeEnable = true;\n    }\n\n    public disableResize(): void {\n        this.resizeEnable = false;\n    }\n\n    public addItem(ngItem: NgGridItem): void {\n        ngItem.setCascadeMode(this.cascade);\n\n        if (!this._preferNew) {\n            var newPos = this._fixGridPosition(ngItem.getGridPosition(), ngItem.getSize());\n            ngItem.setGridPosition(newPos);\n        }\n\n        if (ngItem.uid === null || this._items.has(ngItem.uid)) {\n            ngItem.uid = this.generateItemUid();\n        }\n\n        this._items.set(ngItem.uid, ngItem);\n        this._addToGrid(ngItem);\n\n        this._updateSize();\n\n        this.triggerCascade().then(() => {\n            ngItem.recalculateSelf();\n            ngItem.onCascadeEvent();\n\n            this._emitOnItemChange();\n        });\n\n    }\n\n    public removeItem(ngItem: NgGridItem): void {\n        this._removeFromGrid(ngItem);\n\n        this._items.delete(ngItem.uid);\n\n        if (this._destroyed) return;\n\n        this.triggerCascade().then(() => {\n            this._updateSize();\n            this._items.forEach((item: NgGridItem) => item.recalculateSelf());\n            this._emitOnItemChange();\n        });\n    }\n\n    public updateItem(ngItem: NgGridItem): void {\n        this._removeFromGrid(ngItem);\n        this._addToGrid(ngItem);\n\n        this.triggerCascade().then(() => {\n            this._updateSize();\n            ngItem.onCascadeEvent();\n        });\n    }\n\n    public triggerCascade(): Promise<void> {\n        if (!this._cascadePromise) {\n            this._cascadePromise = new Promise<void>((resolve: () => void) => {\n                setTimeout(() => {\n                    this._cascadePromise = null;\n                    this._cascadeGrid(null, null);\n                    resolve();\n                }, 0);\n            });\n        }\n\n        return this._cascadePromise;\n    }\n\n    public triggerResize(): void {\n        this.resizeEventHandler(null);\n    }\n\n    public resizeEventHandler(e: any): void {\n        this._calculateColWidth();\n        this._calculateRowHeight();\n\n        this._updateRatio();\n\n        if (this._limitToScreen) {\n            const newMaxColumns = this._getContainerColumns();\n            if (this._maxCols !== newMaxColumns) {\n                this._maxCols = newMaxColumns;\n                this._updatePositionsAfterMaxChange();\n                this._cascadeGrid();\n            }\n\n            if (this._centerToScreen) {\n                this.screenMargin = this._getScreenMargin();\n\n                this._items.forEach((item: NgGridItem) => {\n                    item.recalculateSelf();\n                });\n            }\n        } else if (this._autoResize) {\n            this._items.forEach((item: NgGridItem) => {\n                item.recalculateSelf();\n            });\n        }\n\n        this._updateSize();\n    }\n\n    public mouseDownEventHandler(e: MouseEvent | TouchEvent): void {\n        var mousePos = this._getMousePosition(e);\n        var item = this._getItemFromPosition(mousePos);\n\n        if (item == null) return;\n\n        const resizeDirection: string = item.canResize(e);\n\n        if (this.resizeEnable && resizeDirection) {\n            this._resizeReady = true;\n            this._resizingItem = item;\n            this._resizeDirection = resizeDirection;\n\n            e.preventDefault();\n        } else if (this.dragEnable && item.canDrag(e)) {\n            this._dragReady = true;\n            this._draggingItem = item;\n\n            const itemPos = item.getPosition();\n            this._posOffset = { 'left': (mousePos.left - itemPos.left), 'top': (mousePos.top - itemPos.top) }\n\n            e.preventDefault();\n        }\n    }\n\n    public mouseUpEventHandler(e: MouseEvent | TouchEvent): void {\n        if (this.isDragging) {\n            this._dragStop(e);\n        } else if (this.isResizing) {\n            this._resizeStop(e);\n        } else if (this._dragReady || this._resizeReady) {\n            this._cleanDrag();\n            this._cleanResize();\n        }\n    }\n\n    public mouseMoveEventHandler(e: MouseEvent | TouchEvent): void {\n        if (this._resizeReady) {\n            this._resizeStart(e);\n            e.preventDefault();\n            return;\n        } else if (this._dragReady) {\n            this._dragStart(e);\n            e.preventDefault();\n            return;\n        }\n\n        if (this.isDragging) {\n            this._drag(e);\n        } else if (this.isResizing) {\n            this._resize(e);\n        } else {\n            var mousePos = this._getMousePosition(e);\n            var item = this._getItemFromPosition(mousePos);\n\n            if (item) {\n                item.onMouseMove(e);\n            }\n        }\n    }\n\n    //    Private methods\n    private _getFixDirectionFromCascade(): NgConfigFixDirection {\n        switch (this.cascade) {\n            case 'up':\n            case 'down':\n            default:\n                return 'vertical';\n            case 'left':\n            case 'right':\n                return 'horizontal';\n        }\n    }\n    private _updatePositionsAfterMaxChange(): void {\n        this._items.forEach((item: NgGridItem) => {\n            var pos = item.getGridPosition();\n            var dims = item.getSize();\n\n            if (!this._hasGridCollision(pos, dims) && this._isWithinBounds(pos, dims) && dims.x <= this._maxCols && dims.y <= this._maxRows) {\n                return;\n            }\n\n            this._removeFromGrid(item);\n\n            if (this._maxCols > 0 && dims.x > this._maxCols) {\n                dims.x = this._maxCols;\n                item.setSize(dims);\n            } else if (this._maxRows > 0 && dims.y > this._maxRows) {\n                dims.y = this._maxRows;\n                item.setSize(dims);\n            }\n\n            if (this._hasGridCollision(pos, dims) || !this._isWithinBounds(pos, dims, true)) {\n                var newPosition = this._fixGridPosition(pos, dims);\n                item.setGridPosition(newPosition);\n            }\n\n            this._addToGrid(item);\n        });\n    }\n\n    private _calculateColWidth(): void {\n        if (this._autoResize) {\n            if (this._maxCols > 0 || this._visibleCols > 0) {\n                var maxCols = this._maxCols > 0 ? this._maxCols : this._visibleCols;\n                var maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\n\n                var colWidth: number = Math.floor(maxWidth / maxCols);\n                colWidth -= (this.marginLeft + this.marginRight);\n                if (colWidth > 0) this.colWidth = colWidth;\n\n            }\n        }\n\n        if (this.colWidth < this.minWidth || this.minCols > this._config.min_cols) {\n            this.minCols = Math.max(this._config.min_cols, Math.ceil(this.minWidth / this.colWidth));\n        }\n    }\n\n    private _calculateRowHeight(): void {\n        if (this._autoResize) {\n            if (this._maxRows > 0 || this._visibleRows > 0) {\n                var maxRows = this._maxRows > 0 ? this._maxRows : this._visibleRows;\n                let maxHeight: number;\n\n                if (this._elementBasedDynamicRowHeight) {\n                    maxHeight = this._ngEl.nativeElement.getBoundingClientRect().height;\n                } else {\n                    maxHeight = window.innerHeight - this.marginTop - this.marginBottom;\n                }\n\n                var rowHeight: number = Math.max(Math.floor(maxHeight / maxRows), this.minHeight);\n                rowHeight -= (this.marginTop + this.marginBottom);\n                if (rowHeight > 0) this.rowHeight = rowHeight;\n\n            }\n        }\n\n        if (this.rowHeight < this.minHeight || this.minRows > this._config.min_rows) {\n            this.minRows = Math.max(this._config.min_rows, Math.ceil(this.minHeight / this.rowHeight));\n        }\n    }\n\n    private _updateRatio(): void {\n        if (!this._autoResize || !this._maintainRatio) return;\n\n        if (this._maxCols > 0 && this._visibleRows <= 0) {\n            this.rowHeight = this.colWidth / this._aspectRatio;\n        } else if (this._maxRows > 0 && this._visibleCols <= 0) {\n            this.colWidth = this._aspectRatio * this.rowHeight;\n        } else if (this._maxCols == 0 && this._maxRows == 0) {\n            if (this._visibleCols > 0) {\n                this.rowHeight = this.colWidth / this._aspectRatio;\n            } else if (this._visibleRows > 0) {\n                this.colWidth = this._aspectRatio * this.rowHeight;\n            }\n        }\n    }\n\n    private _applyChanges(changes: any): void {\n        changes.forEachAddedItem((record: any) => { this._config[record.key] = record.currentValue; });\n        changes.forEachChangedItem((record: any) => { this._config[record.key] = record.currentValue; });\n        changes.forEachRemovedItem((record: any) => { delete this._config[record.key]; });\n\n        this.setConfig(this._config);\n    }\n\n    private _resizeStart(e: any): void {\n        if (!this.resizeEnable || !this._resizingItem) return;\n\n        //    Setup\n        this._resizingItem.startMoving();\n        this._removeFromGrid(this._resizingItem);\n        this._createPlaceholder(this._resizingItem);\n\n        if (this._allowOverlap) {\n            this._resizingItem.zIndex = this._lastZValue++;\n        }\n\n        //    Status Flags\n        this.isResizing = true;\n        this._resizeReady = false;\n\n        //    Events\n        this.onResizeStart.emit(this._resizingItem);\n        this._resizingItem.onResizeStartEvent();\n    }\n\n    private _dragStart(e: any): void {\n        if (!this.dragEnable || !this._draggingItem) return;\n\n        //    Start dragging\n        this._draggingItem.startMoving();\n        this._removeFromGrid(this._draggingItem);\n        this._createPlaceholder(this._draggingItem);\n\n        if (this._allowOverlap) {\n            this._draggingItem.zIndex = this._lastZValue++;\n        }\n\n        //    Status Flags\n        this.isDragging = true;\n        this._dragReady = false;\n\n        //    Events\n        this.onDragStart.emit(this._draggingItem);\n        this._draggingItem.onDragStartEvent();\n\n        //    Zoom\n        if (this._zoomOnDrag) {\n            this._zoomOut();\n        }\n    }\n\n    private _zoomOut(): void {\n        this._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'scale(0.5, 0.5)');\n    }\n\n    private _resetZoom(): void {\n        this._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', '');\n    }\n\n    private _drag(e: any): void {\n        if (!this.isDragging) return;\n\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            } else if (window.getSelection().removeAllRanges) {\n                window.getSelection().removeAllRanges();\n            }\n        } else if ((<any>document).selection) {\n            (<any>document).selection.empty();\n        }\n\n        var mousePos = this._getMousePosition(e);\n        var newL = (mousePos.left - this._posOffset.left);\n        var newT = (mousePos.top - this._posOffset.top);\n\n        var itemPos = this._draggingItem.getGridPosition();\n        var gridPos = this._calculateGridPosition(newL, newT);\n        var dims = this._draggingItem.getSize();\n\n        gridPos = this._fixPosToBoundsX(gridPos, dims);\n\n        if (!this._isWithinBoundsY(gridPos, dims)) {\n            gridPos = this._fixPosToBoundsY(gridPos, dims);\n        }\n\n        if (gridPos.col != itemPos.col || gridPos.row != itemPos.row) {\n            this._draggingItem.setGridPosition(gridPos, this._fixToGrid);\n            this._placeholderRef.instance.setGridPosition(gridPos);\n\n            if (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\n                this._fixGridCollisions(gridPos, dims);\n                this._cascadeGrid(gridPos, dims);\n            }\n        }\n\n        if (!this._fixToGrid) {\n            this._draggingItem.setPosition(newL, newT);\n        }\n\n        this.onDrag.emit(this._draggingItem);\n        this._draggingItem.onDragEvent();\n    }\n\n    private _resize(e: any): void {\n        if (!this.isResizing) { return; }\n\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            } else if (window.getSelection().removeAllRanges) {\n                window.getSelection().removeAllRanges();\n            }\n        } else if ((<any>document).selection) {\n            (<any>document).selection.empty();\n        }\n\n        const mousePos = this._getMousePosition(e);\n        const itemPos = this._resizingItem.getPosition();\n        const itemDims = this._resizingItem.getDimensions();\n        const endCorner = {\n            left: itemPos.left + itemDims.width,\n            top: itemPos.top + itemDims.height,\n        }\n\n        const resizeTop = this._resizeDirection.includes('top');\n        const resizeBottom = this._resizeDirection.includes('bottom');\n        const resizeLeft = this._resizeDirection.includes('left')\n        const resizeRight = this._resizeDirection.includes('right');\n\n        // Calculate new width and height based upon resize direction\n        let newW = resizeRight\n            ? (mousePos.left - itemPos.left + 1)\n            : resizeLeft\n                ? (endCorner.left - mousePos.left + 1)\n                : itemDims.width;\n        let newH = resizeBottom\n            ? (mousePos.top - itemPos.top + 1)\n            : resizeTop\n                ? (endCorner.top - mousePos.top + 1)\n                : itemDims.height;\n\n        if (newW < this.minWidth)\n            newW = this.minWidth;\n        if (newH < this.minHeight)\n            newH = this.minHeight;\n        if (newW < this._resizingItem.minWidth)\n            newW = this._resizingItem.minWidth;\n        if (newH < this._resizingItem.minHeight)\n            newH = this._resizingItem.minHeight;\n\n        let newX = itemPos.left;\n        let newY = itemPos.top;\n\n        if (resizeLeft)\n            newX = endCorner.left - newW;\n        if (resizeTop)\n            newY = endCorner.top - newH;\n\n        let calcSize = this._calculateGridSize(newW, newH);\n        const itemSize = this._resizingItem.getSize();\n        const iGridPos = this._resizingItem.getGridPosition();\n        const bottomRightCorner = {\n            col: iGridPos.col + itemSize.x,\n            row: iGridPos.row + itemSize.y,\n        };\n        const targetPos: NgGridItemPosition = Object.assign({}, iGridPos);\n\n        if (this._resizeDirection.includes('top'))\n            targetPos.row = bottomRightCorner.row - calcSize.y;\n        if (this._resizeDirection.includes('left'))\n            targetPos.col = bottomRightCorner.col - calcSize.x;\n\n        if (!this._isWithinBoundsX(targetPos, calcSize))\n            calcSize = this._fixSizeToBoundsX(targetPos, calcSize);\n\n        if (!this._isWithinBoundsY(targetPos, calcSize))\n            calcSize = this._fixSizeToBoundsY(targetPos, calcSize);\n\n        calcSize = this._resizingItem.fixResize(calcSize);\n\n        if (calcSize.x != itemSize.x || calcSize.y != itemSize.y) {\n            this._resizingItem.setGridPosition(targetPos, this._fixToGrid);\n            this._placeholderRef.instance.setGridPosition(targetPos);\n            this._resizingItem.setSize(calcSize, this._fixToGrid);\n            this._placeholderRef.instance.setSize(calcSize);\n\n            if (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\n                this._fixGridCollisions(targetPos, calcSize);\n                this._cascadeGrid(targetPos, calcSize);\n            }\n        }\n\n        if (!this._fixToGrid) {\n            this._resizingItem.setDimensions(newW, newH);\n            this._resizingItem.setPosition(newX, newY);\n        }\n\n        this.onResize.emit(this._resizingItem);\n        this._resizingItem.onResizeEvent();\n    }\n\n    private _dragStop(e: any): void {\n        if (!this.isDragging) return;\n\n        this.isDragging = false;\n\n        var itemPos = this._draggingItem.getGridPosition();\n\n        this._draggingItem.setGridPosition(itemPos);\n        this._addToGrid(this._draggingItem);\n\n        this._cascadeGrid();\n        this._updateSize();\n\n        this._draggingItem.stopMoving();\n        this._draggingItem.onDragStopEvent();\n        this.onDragStop.emit(this._draggingItem);\n\n        this._cleanDrag();\n        this._placeholderRef.destroy();\n\n        this._emitOnItemChange();\n\n        if (this._zoomOnDrag) {\n            this._resetZoom();\n        }\n    }\n\n    private _resizeStop(e: any): void {\n        if (!this.isResizing) return;\n\n        this.isResizing = false;\n\n        const itemDims = this._resizingItem.getSize();\n        this._resizingItem.setSize(itemDims);\n\n        const itemPos = this._resizingItem.getGridPosition();\n        this._resizingItem.setGridPosition(itemPos);\n\n        this._addToGrid(this._resizingItem);\n\n        this._cascadeGrid();\n        this._updateSize();\n\n        this._resizingItem.stopMoving();\n        this._resizingItem.onResizeStopEvent();\n        this.onResizeStop.emit(this._resizingItem);\n\n        this._cleanResize();\n        this._placeholderRef.destroy();\n\n        this._emitOnItemChange();\n    }\n\n    private _cleanDrag(): void {\n        this._draggingItem = null;\n        this._posOffset = null;\n        this.isDragging = false;\n        this._dragReady = false;\n    }\n\n    private _cleanResize(): void {\n        this._resizingItem = null;\n        this._resizeDirection = null;\n        this.isResizing = false;\n        this._resizeReady = false;\n    }\n\n    private _calculateGridSize(width: number, height: number): NgGridItemSize {\n        width += this.marginLeft + this.marginRight;\n        height += this.marginTop + this.marginBottom;\n\n        var sizex = Math.max(this.minCols, Math.round(width / (this.colWidth + this.marginLeft + this.marginRight)));\n        var sizey = Math.max(this.minRows, Math.round(height / (this.rowHeight + this.marginTop + this.marginBottom)));\n\n        if (!this._isWithinBoundsX({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizex = this._maxCols;\n        if (!this._isWithinBoundsY({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizey = this._maxRows;\n\n        return { 'x': sizex, 'y': sizey };\n    }\n\n    private _calculateGridPosition(left: number, top: number): NgGridItemPosition {\n        var col = Math.max(1, Math.round(left / (this.colWidth + this.marginLeft + this.marginRight)) + 1);\n        var row = Math.max(1, Math.round(top / (this.rowHeight + this.marginTop + this.marginBottom)) + 1);\n\n        if (!this._isWithinBoundsX({ col: col, row: row }, { x: 1, y: 1 })) col = this._maxCols;\n        if (!this._isWithinBoundsY({ col: col, row: row }, { x: 1, y: 1 })) row = this._maxRows;\n\n        return { 'col': col, 'row': row };\n    }\n\n    private _hasGridCollision(pos: NgGridItemPosition, dims: NgGridItemSize): boolean {\n        var positions = this._getCollisions(pos, dims);\n\n        if (positions == null || positions.length == 0) return false;\n\n        return positions.some((v: NgGridItem) => {\n            return !(v === null);\n        });\n    }\n\n    private _getCollisions(pos: NgGridItemPosition, dims: NgGridItemSize): Array<NgGridItem> {\n        if (this._allowOverlap) return [];\n\n        const returns: Array<NgGridItem> = [];\n\n        if (!pos.col) { pos.col = 1; }\n        if (!pos.row) { pos.row = 1; }\n\n        const leftCol = pos.col;\n        const rightCol = pos.col + dims.x;\n        const topRow = pos.row;\n        const bottomRow = pos.row + dims.y;\n\n        this._itemsInGrid.forEach((itemId: string) => {\n            const item: NgGridItem = this._items.get(itemId);\n\n            if (!item) {\n                this._itemsInGrid.delete(itemId);\n                return;\n            }\n\n            const itemLeftCol = item.col;\n            const itemRightCol = item.col + item.sizex;\n            const itemTopRow = item.row;\n            const itemBottomRow = item.row + item.sizey;\n\n            const withinColumns = leftCol < itemRightCol && itemLeftCol < rightCol;\n            const withinRows = topRow < itemBottomRow && itemTopRow < bottomRow;\n\n            if (withinColumns && withinRows) {\n                returns.push(item);\n            }\n        });\n\n        return returns;\n    }\n\n    private _fixGridCollisions(pos: NgGridItemPosition, dims: NgGridItemSize): void {\n        const collisions: Array<NgGridItem> = this._getCollisions(pos, dims);\n        if (collisions.length === 0) { return; }\n\n        for (let collision of collisions) {\n            this._removeFromGrid(collision);\n\n            const itemDims: NgGridItemSize = collision.getSize();\n            const itemPos: NgGridItemPosition = collision.getGridPosition();\n            let newItemPos: NgGridItemPosition = { col: itemPos.col, row: itemPos.row };\n\n            if (this._collisionFixDirection === 'vertical') {\n                newItemPos.row = pos.row + dims.y;\n\n                if (!this._isWithinBoundsY(newItemPos, itemDims)) {\n                    newItemPos.col = pos.col + dims.x;\n                    newItemPos.row = 1;\n                }\n            } else if (this._collisionFixDirection === 'horizontal') {\n                newItemPos.col = pos.col + dims.x;\n\n                if (!this._isWithinBoundsX(newItemPos, itemDims)) {\n                    newItemPos.col = 1;\n                    newItemPos.row = pos.row + dims.y;\n                }\n            }\n\n            collision.setGridPosition(newItemPos);\n\n            this._fixGridCollisions(newItemPos, itemDims);\n            this._addToGrid(collision);\n            collision.onCascadeEvent();\n        }\n\n        this._fixGridCollisions(pos, dims);\n    }\n\n    private _cascadeGrid(pos?: NgGridItemPosition, dims?: NgGridItemSize): void {\n        if (this._destroyed) return;\n        if (this._allowOverlap) return;\n        if (!pos !== !dims) throw new Error('Cannot cascade with only position and not dimensions');\n\n        if (this.isDragging && this._draggingItem && !pos && !dims) {\n            pos = this._draggingItem.getGridPosition();\n            dims = this._draggingItem.getSize();\n        } else if (this.isResizing && this._resizingItem && !pos && !dims) {\n            pos = this._resizingItem.getGridPosition();\n            dims = this._resizingItem.getSize();\n        }\n\n        let itemsInGrid: NgGridItem[] = Array.from(this._itemsInGrid, (itemId: string) => this._items.get(itemId));\n\n        switch (this.cascade) {\n            case 'up':\n            case 'down':\n                itemsInGrid = itemsInGrid.sort(NgGridHelper.sortItemsByPositionVertical);\n                const lowestRowPerColumn: Map<number, number> = new Map<number, number>();\n\n                for (let item of itemsInGrid) {\n                    if (item.isFixed) continue;\n\n                    const itemDims: NgGridItemSize = item.getSize();\n                    const itemPos: NgGridItemPosition = item.getGridPosition();\n\n                    let lowestRowForItem: number = lowestRowPerColumn.get(itemPos.col) || 1;\n\n                    for (let i: number = 1; i < itemDims.x; i++) {\n                        const lowestRowForColumn = lowestRowPerColumn.get(itemPos.col + i) || 1;\n                        lowestRowForItem = Math.max(lowestRowForColumn, lowestRowForItem);\n                    }\n\n                    const leftCol = itemPos.col;\n                    const rightCol = itemPos.col + itemDims.x;\n\n                    if (pos && dims) {\n                        const withinColumns = rightCol > pos.col && leftCol < (pos.col + dims.x);\n\n                        if (withinColumns) {          // If our element is in one of the item's columns\n                            const roomAboveItem = itemDims.y <= (pos.row - lowestRowForItem);\n\n                            if (!roomAboveItem) {                                                  // Item can't fit above our element\n                                lowestRowForItem = Math.max(lowestRowForItem, pos.row + dims.y);   // Set the lowest row to be below it\n                            }\n                        }\n                    }\n\n                    const newPos: NgGridItemPosition = { col: itemPos.col, row: lowestRowForItem };\n\n                    //    What if it's not within bounds Y?\n                    if (lowestRowForItem != itemPos.row && this._isWithinBoundsY(newPos, itemDims)) { // If the item is not already on this row move it up\n                        this._removeFromGrid(item);\n\n                        item.setGridPosition(newPos);\n\n                        item.onCascadeEvent();\n                        this._addToGrid(item);\n                    }\n\n                    for (let i: number = 0; i < itemDims.x; i++) {\n                        lowestRowPerColumn.set(itemPos.col + i, lowestRowForItem + itemDims.y); // Update the lowest row to be below the item\n                    }\n                }\n                break;\n            case 'left':\n            case 'right':\n                itemsInGrid = itemsInGrid.sort(NgGridHelper.sortItemsByPositionHorizontal);\n                const lowestColumnPerRow: Map<number, number> = new Map<number, number>();\n\n                for (let item of itemsInGrid) {\n                    const itemDims: NgGridItemSize = item.getSize();\n                    const itemPos: NgGridItemPosition = item.getGridPosition();\n\n                    let lowestColumnForItem: number = lowestColumnPerRow.get(itemPos.row) || 1;\n\n                    for (let i: number = 1; i < itemDims.y; i++) {\n                        let lowestOffsetColumn: number = lowestColumnPerRow.get(itemPos.row + i) || 1;\n                        lowestColumnForItem = Math.max(lowestOffsetColumn, lowestColumnForItem);\n                    }\n\n                    const topRow = itemPos.row;\n                    const bottomRow = itemPos.row + itemDims.y;\n\n                    if (pos && dims) {\n                        const withinRows = bottomRow > pos.col && topRow < (pos.col + dims.x);\n\n                        if (withinRows) {          // If our element is in one of the item's rows\n                            const roomNextToItem = itemDims.x <= (pos.col - lowestColumnForItem);\n\n                            if (!roomNextToItem) {                                                      // Item can't fit next to our element\n                                lowestColumnForItem = Math.max(lowestColumnForItem, pos.col + dims.x);  // Set the lowest col to be the other side of it\n                            }\n                        }\n                    }\n\n                    const newPos: NgGridItemPosition = { col: lowestColumnForItem, row: itemPos.row };\n\n                    if (lowestColumnForItem != itemPos.col && this._isWithinBoundsX(newPos, itemDims)) { // If the item is not already on this col move it up\n                        this._removeFromGrid(item);\n\n                        item.setGridPosition(newPos);\n\n                        item.onCascadeEvent();\n                        this._addToGrid(item);\n                    }\n\n                    for (let i: number = 0; i < itemDims.y; i++) {\n                        lowestColumnPerRow.set(itemPos.row + i, lowestColumnForItem + itemDims.x); // Update the lowest col to be below the item\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    private _fixGridPosition(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\n        if (!this._hasGridCollision(pos, dims)) return pos;\n\n        const maxRow = this._maxRows === 0 ? this._getMaxRow() : this._maxRows;\n        const maxCol = this._maxCols === 0 ? this._getMaxCol() : this._maxCols;\n        const newPos = {\n            col: pos.col,\n            row: pos.row,\n        };\n\n        if (this._itemFixDirection === 'vertical') {\n            fixLoop:\n            for (; newPos.col <= maxRow;) {\n                const itemsInPath = this._getItemsInVerticalPath(newPos, dims, newPos.row);\n                let nextRow = newPos.row;\n\n                for (let item of itemsInPath) {\n                    if (item.row - nextRow >= dims.y) {\n                        newPos.row = nextRow;\n                        break fixLoop;\n                    }\n\n                    nextRow = item.row + item.sizey;\n                }\n\n                if (maxRow - nextRow >= dims.y) {\n                    newPos.row = nextRow;\n                    break fixLoop;\n                }\n\n                newPos.col = Math.max(newPos.col + 1, Math.min.apply(Math, itemsInPath.map((item) => item.col + dims.x)));\n                newPos.row = 1;\n            }\n        } else if (this._itemFixDirection === 'horizontal') {\n            fixLoop:\n            for (; newPos.row <= maxRow;) {\n                const itemsInPath = this._getItemsInHorizontalPath(newPos, dims, newPos.col);\n                let nextCol = newPos.col;\n\n                for (let item of itemsInPath) {\n                    if (item.col - nextCol >= dims.x) {\n                        newPos.col = nextCol;\n                        break fixLoop;\n                    }\n\n                    nextCol = item.col + item.sizex;\n                }\n\n                if (maxCol - nextCol >= dims.x) {\n                    newPos.col = nextCol;\n                    break fixLoop;\n                }\n\n                newPos.row = Math.max(newPos.row + 1, Math.min.apply(Math, itemsInPath.map((item) => item.row + dims.y)));\n                newPos.col = 1;\n            }\n        }\n\n        return newPos;\n    }\n\n    private _getItemsInHorizontalPath(pos: NgGridItemPosition, dims: NgGridItemSize, startColumn: number = 0): NgGridItem[] {\n        const itemsInPath: NgGridItem[] = [];\n        const topRow: number = pos.row + dims.y - 1;\n\n        this._itemsInGrid.forEach((itemId: string) => {\n            const item = this._items.get(itemId);\n            if (item.col + item.sizex - 1 < startColumn) { return; }    // Item falls after start column\n            if (item.row > topRow) { return; }                          // Item falls above path\n            if (item.row + item.sizey - 1 < pos.row) { return; }        // Item falls below path\n            itemsInPath.push(item);\n        });\n\n        return itemsInPath;\n    }\n\n    private _getItemsInVerticalPath(pos: NgGridItemPosition, dims: NgGridItemSize, startRow: number = 0): NgGridItem[] {\n        const itemsInPath: NgGridItem[] = [];\n        const rightCol: number = pos.col + dims.x - 1;\n\n        this._itemsInGrid.forEach((itemId: string) => {\n            const item = this._items.get(itemId);\n            if (item.row + item.sizey - 1 < startRow) { return; }   // Item falls above start row\n            if (item.col > rightCol) { return; }                    // Item falls after path\n            if (item.col + item.sizex - 1 < pos.col) { return; }    // Item falls before path\n            itemsInPath.push(item);\n        });\n\n        return itemsInPath;\n    }\n\n    private _isWithinBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\n        return this._maxCols == 0 || (allowExcessiveItems && pos.col == 1) || (pos.col + dims.x - 1) <= this._maxCols;\n    }\n\n    private _fixPosToBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\n        if (!this._isWithinBoundsX(pos, dims)) {\n            pos.col = Math.max(this._maxCols - (dims.x - 1), 1);\n            pos.row ++;\n        }\n        return pos;\n    }\n\n    private _fixSizeToBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\n        if (!this._isWithinBoundsX(pos, dims)) {\n            dims.x = Math.max(this._maxCols - (pos.col - 1), 1);\n            dims.y++;\n        }\n        return dims;\n    }\n\n    private _isWithinBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\n        return this._maxRows == 0 || (allowExcessiveItems && pos.row == 1) || (pos.row + dims.y - 1) <= this._maxRows;\n    }\n\n    private _fixPosToBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\n        if (!this._isWithinBoundsY(pos, dims)) {\n            pos.row = Math.max(this._maxRows - (dims.y - 1), 1);\n            pos.col++;\n        }\n        return pos;\n    }\n\n    private _fixSizeToBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\n        if (!this._isWithinBoundsY(pos, dims)) {\n            dims.y = Math.max(this._maxRows - (pos.row - 1), 1);\n            dims.x++;\n        }\n        return dims;\n    }\n\n    private _isWithinBounds(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\n        return this._isWithinBoundsX(pos, dims, allowExcessiveItems) && this._isWithinBoundsY(pos, dims, allowExcessiveItems);\n    }\n\n    private _fixPosToBounds(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\n        return this._fixPosToBoundsX(this._fixPosToBoundsY(pos, dims), dims);\n    }\n\n    private _fixSizeToBounds(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\n        return this._fixSizeToBoundsX(pos, this._fixSizeToBoundsY(pos, dims));\n    }\n\n    private _addToGrid(item: NgGridItem): void {\n        let pos: NgGridItemPosition = item.getGridPosition();\n        const dims: NgGridItemSize = item.getSize();\n\n        if (this._hasGridCollision(pos, dims)) {\n            this._fixGridCollisions(pos, dims);\n            pos = item.getGridPosition();\n        }\n\n        if (this._allowOverlap) {\n            item.zIndex = this._lastZValue++;\n        }\n\n        this._itemsInGrid.add(item.uid);\n    }\n\n    private _removeFromGrid(item: NgGridItem): void {\n        this._itemsInGrid.delete(item.uid);\n    }\n\n    private _updateSize(): void {\n        if (this._destroyed) return;\n        let maxCol: number = this._getMaxCol();\n        let maxRow: number = this._getMaxRow();\n\n        if (maxCol != this._curMaxCol || maxRow != this._curMaxRow) {\n            this._curMaxCol = maxCol;\n            this._curMaxRow = maxRow;\n        }\n\n        this._renderer.setElementStyle(this._ngEl.nativeElement, 'width', '100%');//(maxCol * (this.colWidth + this.marginLeft + this.marginRight))+'px');\n        if (!this._elementBasedDynamicRowHeight) {\n            this._renderer.setElementStyle(this._ngEl.nativeElement, 'height', (maxRow * (this.rowHeight + this.marginTop + this.marginBottom)) + 'px');\n        }\n    }\n\n    private _getMaxRow(): number {\n        const itemsRows: number[] = Array.from(this._itemsInGrid, (itemId: string) => {\n            const item = this._items.get(itemId);\n            if (!item) return 0;\n            return item.row + item.sizey - 1;\n        });\n\n        return Math.max.apply(null, itemsRows);\n    }\n\n    private _getMaxCol(): number {\n        const itemsCols: number[] = Array.from(this._itemsInGrid, (itemId: string) => {\n            const item = this._items.get(itemId);\n            if (!item) return 0;\n            return item.col + item.sizex - 1;\n        });\n\n        return Math.max.apply(null, itemsCols);\n    }\n\n    private _getMousePosition(e: any): NgGridRawPosition {\n        if (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\n            e = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\n        }\n\n        const refPos: any = this._ngEl.nativeElement.getBoundingClientRect();\n\n        let left: number = e.clientX - refPos.left;\n        let top: number = e.clientY - refPos.top;\n\n        if (this.cascade == 'down') top = refPos.top + refPos.height - e.clientY;\n        if (this.cascade == 'right') left = refPos.left + refPos.width - e.clientX;\n\n        if (this.isDragging && this._zoomOnDrag) {\n            left *= 2;\n            top *= 2;\n        }\n\n        return {\n            left: left,\n            top: top\n        };\n    }\n\n    private _getAbsoluteMousePosition(e: any): NgGridRawPosition {\n        if (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\n            e = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\n        }\n\n        return {\n            left: e.clientX,\n            top: e.clientY\n        };\n    }\n\n    private _getContainerColumns(): number {\n        const maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\n        const itemWidth: number = this.colWidth + this.marginLeft + this.marginRight;\n        return Math.floor(maxWidth / itemWidth);\n    }\n\n    private _getContainerRows(): number {\n        const maxHeight: number = window.innerHeight - this.marginTop - this.marginBottom;\n        return Math.floor(maxHeight / (this.rowHeight + this.marginTop + this.marginBottom));\n    }\n\n    private _getScreenMargin(): number {\n        const maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\n        const itemWidth: number = this.colWidth + this.marginLeft + this.marginRight;\n        return Math.floor((maxWidth - (this._maxCols * itemWidth)) / 2);;\n    }\n\n    private _getItemFromPosition(position: NgGridRawPosition): NgGridItem {\n        return Array.from(this._itemsInGrid, (itemId: string) => this._items.get(itemId)).find((item: NgGridItem) => {\n            if (!item) return false;\n\n            const size: NgGridItemDimensions = item.getDimensions();\n            const pos: NgGridRawPosition = item.getPosition();\n\n            return position.left >= pos.left && position.left < (pos.left + size.width) &&\n            position.top >= pos.top && position.top < (pos.top + size.height);\n        });\n    }\n\n    private _createPlaceholder(item: NgGridItem): void {\n        const pos: NgGridItemPosition = item.getGridPosition();\n        const dims: NgGridItemSize = item.getSize();\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(NgGridPlaceholder);\n        var componentRef: ComponentRef<NgGridPlaceholder> = item.containerRef.createComponent(factory);\n        this._placeholderRef = componentRef;\n        const placeholder: NgGridPlaceholder = componentRef.instance;\n        placeholder.registerGrid(this);\n        placeholder.setCascadeMode(this.cascade);\n        placeholder.setGridPosition({ col: pos.col, row: pos.row });\n        placeholder.setSize({ x: dims.x, y: dims.y });\n    }\n\n    private _emitOnItemChange() {\n        const itemOutput: any[] = Array.from(this._itemsInGrid)\n            .map((itemId: string) => this._items.get(itemId))\n            .filter((item: NgGridItem) => !!item)\n            .map((item: NgGridItem) => item.getEventOutput());\n\n        this.onItemChange.emit(itemOutput);\n    }\n\n    private _defineListeners(): void {\n        const element = this._ngEl.nativeElement;\n\n        this._documentMousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n        this._documentMouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\n        this._mousedown$ = fromEvent(element, 'mousedown');\n        this._mousemove$ = fromEvent(element, 'mousemove');\n        this._mouseup$ = fromEvent(element, 'mouseup');\n        this._touchstart$ = fromEvent(element, 'touchstart');\n        this._touchmove$ = fromEvent(element, 'touchmove');\n        this._touchend$ = fromEvent(element, 'touchend');\n    }\n\n    private _enableListeners(): void {\n        if (this._enabledListener) {\n            return;\n        }\n\n        this._enableMouseListeners();\n\n        if (this._isTouchDevice()) {\n            this._enableTouchListeners();\n        }\n\n        this._enabledListener = true;\n    }\n\n    private _disableListeners(): void {\n        this._subscriptions.forEach((subs: Subscription) => subs.unsubscribe());\n        this._enabledListener = false;\n    }\n\n    private _isTouchDevice(): boolean {\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    };\n\n    private _enableTouchListeners(): void {\n        const touchstartSubs = this._touchstart$.subscribe((e: TouchEvent) => this.mouseDownEventHandler(e));\n        const touchmoveSubs = this._touchmove$.subscribe((e: TouchEvent) => this.mouseMoveEventHandler(e));\n        const touchendSubs = this._touchend$.subscribe((e: TouchEvent) => this.mouseUpEventHandler(e));\n\n        this._subscriptions.push(\n            touchstartSubs,\n            touchmoveSubs,\n            touchendSubs\n        );\n    }\n\n    private _enableMouseListeners(): void {\n        const documentMousemoveSubs = this._documentMousemove$.subscribe((e: MouseEvent) => this.mouseMoveEventHandler(e));\n        const documentMouseupSubs = this._documentMouseup$.subscribe((e: MouseEvent) => this.mouseUpEventHandler(e));\n        const mousedownSubs = this._mousedown$.subscribe((e: MouseEvent) => this.mouseDownEventHandler(e));\n        const mousemoveSubs = this._mousemove$.subscribe((e: MouseEvent) => this.mouseMoveEventHandler(e));\n        const mouseupSubs = this._mouseup$.subscribe((e: MouseEvent) => this.mouseUpEventHandler(e));\n\n        this._subscriptions.push(\n            documentMousemoveSubs,\n            documentMouseupSubs,\n            mousedownSubs,\n            mousemoveSubs,\n            mouseupSubs\n        );\n    }\n}\n","import { NgGrid } from './NgGrid';\nimport { NgGridItemConfig, NgGridItemEvent, NgGridItemPosition, NgGridItemSize, NgGridRawPosition, NgGridItemDimensions, ResizeHandle } from '../interfaces/INgGrid';\nimport { Directive, ElementRef, Renderer2, EventEmitter, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, ViewContainerRef, Output, DoCheck } from '@angular/core';\n\n@Directive({\n    selector: '[ngGridItem]',\n    inputs: ['config: ngGridItem']\n})\nexport class NgGridItem implements OnInit, OnDestroy, DoCheck {\n    // Event Emitters\n    @Output() public onItemChange: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>(false);\n    @Output() public onDragStart: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onDrag: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onDragStop: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onDragAny: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onResizeStart: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onResize: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onResizeStop: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onResizeAny: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onChangeStart: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onChange: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onChangeStop: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public onChangeAny: EventEmitter<NgGridItemEvent> = new EventEmitter<NgGridItemEvent>();\n    @Output() public ngGridItemChange: EventEmitter<NgGridItemConfig> = new EventEmitter<NgGridItemConfig>();\n\n    // Default config\n    private static CONST_DEFAULT_CONFIG: NgGridItemConfig = {\n        uid: null,\n        col: 1,\n        row: 1,\n        sizex: 1,\n        sizey: 1,\n        dragHandle: null,\n        resizeHandle: null,\n        fixed: false,\n        draggable: true,\n        resizable: true,\n        borderSize: 25,\n        resizeDirections: null,\n    };\n\n    public isFixed: boolean = false;\n    public isDraggable: boolean = true;\n    public isResizable: boolean = true;\n    public minWidth: number = 0;\n    public minHeight: number = 0;\n    public uid: string = null;\n\n    // Private variables\n    private _payload: any;\n    private _currentPosition: NgGridItemPosition = { col: 1, row: 1 };\n    private _size: NgGridItemSize = { x: 1, y: 1 };\n    private _config = NgGridItem.CONST_DEFAULT_CONFIG;\n    private _userConfig = null;\n    private _dragHandle: string;\n    private _resizeHandle: ResizeHandle;\n    private _borderSize: number;\n    private _elemWidth: number;\n    private _elemHeight: number;\n    private _elemLeft: number;\n    private _elemTop: number;\n    private _added: boolean = false;\n    private _differ: KeyValueDiffer<string, any>;\n    private _cascadeMode: string;\n    private _maxCols: number = 0;\n    private _minCols: number = 0;\n    private _maxRows: number = 0;\n    private _minRows: number = 0;\n    private _resizeDirections: string[] = [];\n    private _zIndex: number = 0;\n\n    set zIndex(zIndex: number) {\n        this._renderer.setStyle(this._ngEl.nativeElement, 'z-index', zIndex.toString());\n        this._zIndex = zIndex;\n    }\n\n    get zIndex(): number {\n        return this._zIndex;\n    }\n\n    // [ng-grid-item] handler\n    set config(v: NgGridItemConfig) {\n        this._userConfig = v;\n\n        const configObject = Object.assign({}, NgGridItem.CONST_DEFAULT_CONFIG, v);\n        for (let x in NgGridItem.CONST_DEFAULT_CONFIG)\n            if (configObject[x] == null)\n                configObject[x] = NgGridItem.CONST_DEFAULT_CONFIG[x];\n\n        this.setConfig(configObject);\n\n        if (this._userConfig != null) {\n            if (this._differ == null) {\n                this._differ = this._differs.find(this._userConfig).create();\n            }\n\n            this._differ.diff(this._userConfig);\n        }\n\n        if (!this._added) {\n            this._added = true;\n            this._ngGrid.addItem(this);\n        }\n\n        this._recalculateDimensions();\n        this._recalculatePosition();\n    }\n\n    get sizex(): number {\n        return this._size.x;\n    }\n\n    get sizey(): number {\n        return this._size.y;\n    }\n\n    get col(): number {\n        return this._currentPosition.col;\n    }\n\n    get row(): number {\n        return this._currentPosition.row;\n    }\n\n    get currentCol(): number {\n        return this._currentPosition.col;\n    }\n\n    get currentRow(): number {\n        return this._currentPosition.row;\n    }\n\n    // Constructor\n    constructor(\n        private _differs: KeyValueDiffers,\n        private _ngEl: ElementRef,\n        private _renderer: Renderer2,\n        private _ngGrid: NgGrid,\n        public containerRef: ViewContainerRef,\n    ) { }\n\n    public onResizeStartEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onResizeStart.emit(event);\n        this.onResizeAny.emit(event);\n        this.onChangeStart.emit(event);\n        this.onChangeAny.emit(event);\n    }\n    public onResizeEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onResize.emit(event);\n        this.onResizeAny.emit(event);\n        this.onChange.emit(event);\n        this.onChangeAny.emit(event);\n    }\n    public onResizeStopEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onResizeStop.emit(event);\n        this.onResizeAny.emit(event);\n        this.onChangeStop.emit(event);\n        this.onChangeAny.emit(event);\n\n        this.onConfigChangeEvent();\n    }\n    public onDragStartEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onDragStart.emit(event);\n        this.onDragAny.emit(event);\n        this.onChangeStart.emit(event);\n        this.onChangeAny.emit(event);\n    }\n    public onDragEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onDrag.emit(event);\n        this.onDragAny.emit(event);\n        this.onChange.emit(event);\n        this.onChangeAny.emit(event);\n    }\n    public onDragStopEvent(): void {\n        const event: NgGridItemEvent = this.getEventOutput();\n        this.onDragStop.emit(event);\n        this.onDragAny.emit(event);\n        this.onChangeStop.emit(event);\n        this.onChangeAny.emit(event);\n\n        this.onConfigChangeEvent();\n    }\n    public onCascadeEvent(): void {\n        this.onConfigChangeEvent();\n    }\n\n    public ngOnInit(): void {\n        this._renderer.addClass(this._ngEl.nativeElement, 'grid-item');\n        if (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'position', 'absolute');\n        this._recalculateDimensions();\n        this._recalculatePosition();\n\n        // Force a config update in case there is no config assigned\n        this.config = this._userConfig;\n    }\n\n    // Public methods\n    public canDrag(e: any): boolean {\n        if (!this.isDraggable) return false;\n\n        if (this._dragHandle) {\n            return this.findHandle(this._dragHandle, e.target);\n        }\n\n        return true;\n    }\n\n    public findHandle(handleSelector: string, startElement: HTMLElement): boolean {\n        try {\n            let targetElem: any = startElement;\n\n            while (targetElem && targetElem != this._ngEl.nativeElement) {\n                if (this.elementMatches(targetElem, handleSelector)) return true;\n\n                targetElem = targetElem.parentElement;\n            }\n        } catch (err) {}\n\n        return false;\n    }\n\n    public canResize(e: any): string {\n        if (!this.isResizable) return null;\n\n        if (this._resizeHandle) {\n            if (typeof this._resizeHandle === 'string') {\n                return this.findHandle(this._resizeHandle, e.target) ? 'bottomright' : null;\n            }\n\n            if (typeof this._resizeHandle !== 'object') return null;\n\n            const resizeDirections = [ 'bottomright', 'bottomleft', 'topright', 'topleft', 'right', 'left', 'bottom', 'top' ];\n            for (let direction of resizeDirections) {\n                if (direction in this._resizeHandle) {\n                    if (this.findHandle(this._resizeHandle[direction], e.target)) {\n                        return direction;\n                    }\n                }\n            }\n\n            return null;\n        }\n\n        if (this._borderSize <= 0) return null;\n\n        const mousePos: NgGridRawPosition = this._getMousePosition(e);\n\n        for (let direction of this._resizeDirections) {\n            if (this.canResizeInDirection(direction, mousePos)) {\n                return direction;\n            }\n        }\n\n        return null;\n    }\n\n    public onMouseMove(e: any): void {\n        if (this._ngGrid.autoStyle) {\n            if (this._ngGrid.resizeEnable) {\n                const resizeDirection = this.canResize(e);\n\n                let cursor: string = 'default';\n                switch (resizeDirection) {\n                    case 'bottomright':\n                    case 'topleft':\n                        cursor = 'nwse-resize';\n                        break;\n                    case 'topright':\n                    case 'bottomleft':\n                        cursor = 'nesw-resize';\n                        break;\n                    case 'top':\n                    case 'bottom':\n                        cursor = 'ns-resize';\n                        break;\n                    case 'left':\n                    case 'right':\n                        cursor = 'ew-resize';\n                        break;\n                    default:\n                        if (this._ngGrid.dragEnable && this.canDrag(e)) {\n                            cursor = 'move';\n                        }\n                        break;\n                }\n\n                this._renderer.setStyle(this._ngEl.nativeElement, 'cursor', cursor);\n            } else if (this._ngGrid.dragEnable && this.canDrag(e)) {\n                this._renderer.setStyle(this._ngEl.nativeElement, 'cursor', 'move');\n            } else {\n                this._renderer.setStyle(this._ngEl.nativeElement, 'cursor', 'default');\n            }\n        }\n    }\n\n    public ngOnDestroy(): void {\n        if (this._added) this._ngGrid.removeItem(this);\n    }\n\n    //    Getters\n    public getElement(): ElementRef {\n        return this._ngEl;\n    }\n\n    public getDragHandle(): string {\n        return this._dragHandle;\n    }\n\n    public getResizeHandle(): ResizeHandle {\n        return this._resizeHandle;\n    }\n\n    public getDimensions(): NgGridItemDimensions {\n        return { 'width': this._elemWidth, 'height': this._elemHeight };\n    }\n\n    public getSize(): NgGridItemSize {\n        return this._size;\n    }\n\n    public getPosition(): NgGridRawPosition {\n        return { 'left': this._elemLeft, 'top': this._elemTop };\n    }\n\n    public getGridPosition(): NgGridItemPosition {\n        return this._currentPosition;\n    }\n\n    //    Setters\n    public setConfig(config: NgGridItemConfig): void {\n        this._config = config;\n\n        this._payload = config.payload;\n        this._currentPosition.col = config.col ? config.col : NgGridItem.CONST_DEFAULT_CONFIG.col;\n        this._currentPosition.row = config.row ? config.row : NgGridItem.CONST_DEFAULT_CONFIG.row;\n        this._size.x = config.sizex ? config.sizex : NgGridItem.CONST_DEFAULT_CONFIG.sizex;\n        this._size.y = config.sizey ? config.sizey : NgGridItem.CONST_DEFAULT_CONFIG.sizey;\n        this._dragHandle = config.dragHandle;\n        this._resizeHandle = config.resizeHandle;\n        this._borderSize = config.borderSize;\n        this.isDraggable = config.draggable ? true : false;\n        this.isResizable = config.resizable ? true : false;\n        this.isFixed = config.fixed ? true : false;\n        this._resizeDirections = config.resizeDirections || this._ngGrid.resizeDirections;\n\n        this._maxCols = !isNaN(config.maxCols) && isFinite(config.maxCols) ? config.maxCols : 0;\n        this._minCols = !isNaN(config.minCols) && isFinite(config.minCols) ? config.minCols : 0;\n        this._maxRows = !isNaN(config.maxRows) && isFinite(config.maxRows) ? config.maxRows : 0;\n        this._minRows = !isNaN(config.minRows) && isFinite(config.minRows) ? config.minRows : 0;\n\n        this.minWidth = !isNaN(config.minWidth) && isFinite(config.minWidth) ? config.minWidth : 0;\n        this.minHeight = !isNaN(config.minHeight) && isFinite(config.minHeight) ? config.minHeight : 0;\n\n        if (this._minCols > 0 && this._maxCols > 0 && this._minCols > this._maxCols) this._minCols = 0;\n        if (this._minRows > 0 && this._maxRows > 0 && this._minRows > this._maxRows) this._minRows = 0;\n\n        if (this._added) {\n            this._ngGrid.updateItem(this);\n        }\n\n        this._size = this.fixResize(this._size);\n\n        this._recalculatePosition();\n        this._recalculateDimensions();\n    }\n\n    public ngDoCheck(): boolean {\n        if (this._differ != null) {\n            const changes: any = this._differ.diff(this._userConfig);\n\n            if (changes != null) {\n                return this._applyChanges(changes);\n            }\n        }\n\n        return false;\n    }\n\n    public setSize(newSize: NgGridItemSize, update: boolean = true): void {\n        newSize = this.fixResize(newSize);\n        this._size = newSize;\n        if (update) this._recalculateDimensions();\n\n        this.onItemChange.emit(this.getEventOutput());\n    }\n\n    public setGridPosition(gridPosition: NgGridItemPosition, update: boolean = true): void {\n        this._currentPosition = gridPosition;\n        if (update) this._recalculatePosition();\n\n        this.onItemChange.emit(this.getEventOutput());\n    }\n\n    public getEventOutput(): NgGridItemEvent {\n        return <NgGridItemEvent>{\n            uid: this.uid,\n            payload: this._payload,\n            col: this._currentPosition.col,\n            row: this._currentPosition.row,\n            sizex: this._size.x,\n            sizey: this._size.y,\n            width: this._elemWidth,\n            height: this._elemHeight,\n            left: this._elemLeft,\n            top: this._elemTop\n        };\n    }\n\n    public setPosition(x: number, y: number): void {\n        switch (this._cascadeMode) {\n            case 'up':\n            case 'left':\n            default:\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', x + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', y + 'px');\n                break;\n            case 'right':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', x + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', y + 'px');\n                break;\n            case 'down':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', x + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', y + 'px');\n                break;\n        }\n\n        this._elemLeft = x;\n        this._elemTop = y;\n    }\n\n    public setCascadeMode(cascade: string): void {\n        this._cascadeMode = cascade;\n        switch (cascade) {\n            case 'up':\n            case 'left':\n            default:\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', this._elemLeft + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', this._elemTop + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', null);\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', null);\n                break;\n            case 'right':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', this._elemLeft + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', this._elemTop + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', null);\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', null);\n                break;\n            case 'down':\n                this._renderer.setStyle(this._ngEl.nativeElement, 'left', this._elemLeft + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'bottom', this._elemTop + 'px');\n                this._renderer.setStyle(this._ngEl.nativeElement, 'right', null);\n                this._renderer.setStyle(this._ngEl.nativeElement, 'top', null);\n                break;\n        }\n    }\n\n    public setDimensions(w: number, h: number): void {\n        if (w < this.minWidth) w = this.minWidth;\n        if (h < this.minHeight) h = this.minHeight;\n\n        this._renderer.setStyle(this._ngEl.nativeElement, 'width', w + 'px');\n        this._renderer.setStyle(this._ngEl.nativeElement, 'height', h + 'px');\n\n        this._elemWidth = w;\n        this._elemHeight = h;\n    }\n\n    public startMoving(): void {\n        this._renderer.addClass(this._ngEl.nativeElement, 'moving');\n        const style: any = window.getComputedStyle(this._ngEl.nativeElement);\n        if (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'z-index', (parseInt(style.getPropertyValue('z-index')) + 1).toString());\n    }\n\n    public stopMoving(): void {\n        this._renderer.removeClass(this._ngEl.nativeElement, 'moving');\n        const style: any = window.getComputedStyle(this._ngEl.nativeElement);\n        if (this._ngGrid.autoStyle) this._renderer.setStyle(this._ngEl.nativeElement, 'z-index', (parseInt(style.getPropertyValue('z-index')) - 1).toString());\n    }\n\n    public recalculateSelf(): void {\n        this._recalculatePosition();\n        this._recalculateDimensions();\n    }\n\n    public fixResize(newSize: NgGridItemSize): NgGridItemSize {\n        if (this._maxCols > 0 && newSize.x > this._maxCols) newSize.x = this._maxCols;\n        if (this._maxRows > 0 && newSize.y > this._maxRows) newSize.y = this._maxRows;\n\n        if (this._minCols > 0 && newSize.x < this._minCols) newSize.x = this._minCols;\n        if (this._minRows > 0 && newSize.y < this._minRows) newSize.y = this._minRows;\n\n        const itemWidth = (newSize.x * this._ngGrid.colWidth) + ((this._ngGrid.marginLeft + this._ngGrid.marginRight) * (newSize.x - 1));\n        if (itemWidth < this.minWidth) newSize.x = Math.ceil((this.minWidth + this._ngGrid.marginRight + this._ngGrid.marginLeft) / (this._ngGrid.colWidth + this._ngGrid.marginRight + this._ngGrid.marginLeft));\n\n        const itemHeight = (newSize.y * this._ngGrid.rowHeight) + ((this._ngGrid.marginTop + this._ngGrid.marginBottom) * (newSize.y - 1));\n        if (itemHeight < this.minHeight) newSize.y = Math.ceil((this.minHeight + this._ngGrid.marginBottom + this._ngGrid.marginTop) / (this._ngGrid.rowHeight + this._ngGrid.marginBottom + this._ngGrid.marginTop));\n\n        return newSize;\n    }\n\n    // Private methods\n    private elementMatches(element: any, selector: string): boolean {\n        if (!element) return false;\n        if (element.matches) return element.matches(selector);\n        if (element.oMatchesSelector) return element.oMatchesSelector(selector);\n        if (element.msMatchesSelector) return element.msMatchesSelector(selector);\n        if (element.mozMatchesSelector) return element.mozMatchesSelector(selector);\n        if (element.webkitMatchesSelector) return element.webkitMatchesSelector(selector);\n\n        if (!element.document || !element.ownerDocument) return false;\n\n        const matches: any = (element.document || element.ownerDocument).querySelectorAll(selector);\n        let i: number = matches.length;\n        while (--i >= 0 && matches.item(i) !== element) { }\n        return i > -1;\n    }\n\n    private _recalculatePosition(): void {\n        const x: number = (this._ngGrid.colWidth + this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._currentPosition.col - 1) + this._ngGrid.marginLeft + this._ngGrid.screenMargin;\n        const y: number = (this._ngGrid.rowHeight + this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._currentPosition.row - 1) + this._ngGrid.marginTop;\n\n        this.setPosition(x, y);\n    }\n\n    private _recalculateDimensions(): void {\n        if (this._size.x < this._ngGrid.minCols) this._size.x = this._ngGrid.minCols;\n        if (this._size.y < this._ngGrid.minRows) this._size.y = this._ngGrid.minRows;\n\n        const newWidth: number = (this._ngGrid.colWidth * this._size.x) + ((this._ngGrid.marginLeft + this._ngGrid.marginRight) * (this._size.x - 1));\n        const newHeight: number = (this._ngGrid.rowHeight * this._size.y) + ((this._ngGrid.marginTop + this._ngGrid.marginBottom) * (this._size.y - 1));\n\n        const w: number = Math.max(this.minWidth, this._ngGrid.minWidth, newWidth);\n        const h: number = Math.max(this.minHeight, this._ngGrid.minHeight, newHeight);\n\n        this.setDimensions(w, h);\n    }\n\n    private _getMousePosition(e: any): NgGridRawPosition {\n        if (e.originalEvent && e.originalEvent.touches) {\n            const oe: any = e.originalEvent;\n            e = oe.touches.length ? oe.touches[0] : (oe.changedTouches.length ? oe.changedTouches[0] : e);\n        } else if (e.touches) {\n            e = e.touches.length ? e.touches[0] : (e.changedTouches.length ? e.changedTouches[0] : e);\n        }\n\n\n        const refPos: NgGridRawPosition = this._ngEl.nativeElement.getBoundingClientRect();\n\n        return {\n            left: e.clientX - refPos.left,\n            top: e.clientY - refPos.top\n        };\n    }\n\n    private _applyChanges(changes: any): boolean {\n        let changed: boolean = false;\n        const changeCheck = (record: any) => {\n            if (this._config[record.key] !== record.currentValue) {\n                this._config[record.key] = record.currentValue;\n                changed = true;\n            }\n        };\n        changes.forEachAddedItem(changeCheck);\n        changes.forEachChangedItem(changeCheck);\n        changes.forEachRemovedItem((record: any) => {\n            changed = true;\n            delete this._config[record.key];\n        });\n\n        if (changed) {\n            this.setConfig(this._config);\n        }\n\n        return changed;\n    }\n\n    private onConfigChangeEvent() {\n        if (this._userConfig === null) return;\n\n        this._config.sizex = this._userConfig.sizex = this._size.x;\n        this._config.sizey = this._userConfig.sizey = this._size.y;\n        this._config.col = this._userConfig.col = this._currentPosition.col;\n        this._config.row = this._userConfig.row = this._currentPosition.row;\n        this.ngGridItemChange.emit(this._userConfig);\n    }\n\n    private canResizeInDirection(direction: string, mousePos: NgGridRawPosition): boolean {\n        switch (direction) {\n            case 'bottomright':\n                return mousePos.left < this._elemWidth && mousePos.left > this._elemWidth - this._borderSize\n                    && mousePos.top < this._elemHeight && mousePos.top > this._elemHeight - this._borderSize; // tslint:disable-line:indent\n            case 'bottomleft':\n                return mousePos.left < this._borderSize && mousePos.top < this._elemHeight\n                    && mousePos.top > this._elemHeight - this._borderSize; // tslint:disable-line:indent\n            case 'topright':\n                return mousePos.left < this._elemWidth && mousePos.left > this._elemWidth - this._borderSize\n                    && mousePos.top < this._borderSize; // tslint:disable-line:indent\n            case 'topleft':\n                return mousePos.left < this._borderSize && mousePos.top < this._borderSize;\n            case 'right':\n                return mousePos.left < this._elemWidth && mousePos.left > this._elemWidth - this._borderSize;\n            case 'left':\n                return mousePos.left < this._borderSize;\n            case 'bottom':\n                return mousePos.top < this._elemHeight && mousePos.top > this._elemHeight - this._borderSize;\n            case 'top':\n                return mousePos.top < this._borderSize;\n            default:\n                return false;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { NgGrid } from '../directives/NgGrid';\nimport { NgGridItem } from '../directives/NgGridItem';\nimport { NgGridPlaceholder } from '../components/NgGridPlaceholder';\n\n@NgModule({\n  declarations:     [ NgGrid, NgGridItem, NgGridPlaceholder ],\n  entryComponents:  [ NgGridPlaceholder ],\n  exports:          [ NgGrid, NgGridItem ]\n})\nexport class NgGridModule {}\n"],"names":["Component","ElementRef","Renderer","EventEmitter","NgGridHelper.generateUuid","tslib_1.__values","NgGridHelper.sortItemsByPositionVertical","NgGridHelper.sortItemsByPositionHorizontal","fromEvent","Directive","KeyValueDiffers","ComponentFactoryResolver","Output","Renderer2","ViewContainerRef","NgModule"],"mappings":"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"}
